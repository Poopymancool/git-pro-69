{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TransactionScreen = function (_Component) {\n  _inherits(TransactionScreen, _Component);\n  var _super = _createSuper(TransactionScreen);\n  function TransactionScreen(props) {\n    var _this;\n    _classCallCheck(this, TransactionScreen);\n    _this = _super.call(this, props);\n    _this.getCameraPermissions = function () {\n      var _ref = _asyncToGenerator(function* (domState) {\n        _this.setState({\n          hasCameraPermissions: status === \"granted\",\n          domState: domState,\n          scanned: false\n        });\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    _this.handleBarCodeScanned = function () {\n      var _ref3 = _asyncToGenerator(function* (_ref2) {\n        var type = _ref2.type,\n          data = _ref2.data;\n        _this.setState({\n          scannedData: data,\n          domState: \"normal\",\n          scanned: true\n        });\n      });\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    _this.state = {\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: \"\"\n    };\n    return _this;\n  }\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        domState = _this$state.domState,\n        hasCameraPermissions = _this$state.hasCameraPermissions,\n        scannedData = _this$state.scannedData,\n        scanned = _this$state.scanned;\n      if (domState === \"scanner\") {\n        return _jsx(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject\n        });\n      }\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: hasCameraPermissions ? scannedData : \"Request for Camera Permission\"\n        })\n      });\n    }\n  }]);\n  return TransactionScreen;\n}(Component);\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#D0E6F0\"\n  },\n  text: {\n    color: \"#4C5D70\",\n    fontSize: 15\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 15,\n    borderWidth: 2\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\"\n  }\n});","map":{"version":3,"names":["React","Component","Permissions","BarCodeScanner","TransactionScreen","props","getCameraPermissions","domState","setState","hasCameraPermissions","status","scanned","handleBarCodeScanned","type","data","scannedData","state","undefined","StyleSheet","absoluteFillObject","styles","container","text","create","flex","justifyContent","alignItems","backgroundColor","color","fontSize","button","width","height","borderRadius","borderWidth","buttonText"],"sources":["C:/Users/samar/Downloads/Project 69/PRO-C69-ProjectTemplate-main/screens/Ride.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\n\nexport default class TransactionScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: \"\"\n    };\n  }\n\n  getCameraPermissions = async domState => {\n    //const { status } = await Permissions.askAsync(Permissions.CAMERA);\n    //const { status } = Permissions.askAsync(Permissions.CAMERA);\n    //const { status } = await Permissions.askAsync(Permissions);\n    //const { status } = await Permissions.askAsync(CAMERA);\n\n    this.setState({\n      /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n      hasCameraPermissions: status === \"granted\",\n      domState: domState,\n      scanned: false\n    });\n  };\n\n  handleBarCodeScanned = async ({ type, data }) => {\n    this.setState({\n      scannedData: data,\n      domState: \"normal\",\n      scanned: true\n    });\n  };\n\n  render() {\n    const { domState, hasCameraPermissions, scannedData, scanned } = this.state;\n    if (domState === \"scanner\") {\n      return (\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n      );\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>\n          {hasCameraPermissions ? scannedData : \"Request for Camera Permission\"}\n        </Text>\n        \n        {/*\n          <TouchableOpacity\n            style={[styles.button, { marginTop: 25 }]}\n            onPress= this.getCameraPermissions(\"scanner\")\n          >\n            <Text style={styles.buttonText}>Scan QR Code</Text>\n          </TouchableOpacity> \n        */}\n        {/*\n          <TouchableOpacity\n            style={[styles.button, { marginTop: 25 }]}\n            onPress={() => this.getCameraPermissions(\"scanner\")}\n          >\n            <Text style={styles.buttonText}>Scan QR Code</Text>\n          </TouchableOpacity> \n        */}\n        {/*\n          <TouchableOpacity\n            style={[styles.button, { marginTop: 25 }]}\n            onPress={() => this.getCameraPermissions()}\n          >\n            <Text style={styles.buttonText}>Scan QR Code</Text>\n          </TouchableOpacity> \n        */}\n\n        {/*\n          <TouchableOpacity\n            style={[styles.button, { marginTop: 25 }]}\n            onPress={() => this.getCameraPermissions(\"scanner\")}\n          />\n        */}\n       \n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#D0E6F0\"\n  },\n  text: {\n    color: \"#4C5D70\",\n    fontSize: 15\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 15,\n    borderWidth: 2\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\"\n  }\n});\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAEzC,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAC/C,SAASC,cAAc,QAAQ,sBAAsB;AAAC;AAAA,IAEjCC,iBAAiB;EAAA;EAAA;EACpC,2BAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,MASfC,oBAAoB;MAAA,6BAAG,WAAMC,QAAQ,EAAI;QAMvC,MAAKC,QAAQ,CAAC;UAIZC,oBAAoB,EAAEC,MAAM,KAAK,SAAS;UAC1CH,QAAQ,EAAEA,QAAQ;UAClBI,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC;MAAA;QAAA;MAAA;IAAA;IAAA,MAEDC,oBAAoB;MAAA,8BAAG,kBAA0B;QAAA,IAAjBC,IAAI,SAAJA,IAAI;UAAEC,IAAI,SAAJA,IAAI;QACxC,MAAKN,QAAQ,CAAC;UACZO,WAAW,EAAED,IAAI;UACjBP,QAAQ,EAAE,QAAQ;UAClBI,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC;MAAA;QAAA;MAAA;IAAA;IA9BC,MAAKK,KAAK,GAAG;MACXT,QAAQ,EAAE,QAAQ;MAClBE,oBAAoB,EAAE,IAAI;MAC1BE,OAAO,EAAE,KAAK;MACdI,WAAW,EAAE;IACf,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OA0BD,kBAAS;MACP,kBAAiE,IAAI,CAACC,KAAK;QAAnET,QAAQ,eAARA,QAAQ;QAAEE,oBAAoB,eAApBA,oBAAoB;QAAEM,WAAW,eAAXA,WAAW;QAAEJ,OAAO,eAAPA,OAAO;MAC5D,IAAIJ,QAAQ,KAAK,SAAS,EAAE;QAC1B,OACE,KAAC,cAAc;UACb,gBAAgB,EAAEI,OAAO,GAAGM,SAAS,GAAG,IAAI,CAACL,oBAAqB;UAClE,KAAK,EAAEM,UAAU,CAACC;QAAmB,EACrC;MAEN;MAEA,OACE,KAAC,IAAI;QAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAA,UAC5B,KAAC,IAAI;UAAC,KAAK,EAAED,MAAM,CAACE,IAAK;UAAA,UACtBb,oBAAoB,GAAGM,WAAW,GAAG;QAA+B;MAChE,EAkCF;IAEX;EAAC;EAAA;AAAA,EAtF4Cd,SAAS;AAAA,SAAnCG,iBAAiB;AAyFtC,IAAMgB,MAAM,GAAGF,UAAU,CAACK,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDL,IAAI,EAAE;IACJM,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDC,MAAM,EAAE;IACNC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVP,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS;IAC1BM,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EACDC,UAAU,EAAE;IACVN,QAAQ,EAAE,EAAE;IACZD,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}